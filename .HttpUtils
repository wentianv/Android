package com.example.httppost;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.UnsupportedEncodingException;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLEncoder;
import java.util.Map;

public class HttpUtils {

	private static String PATH = "http://192.168.0.105:8080/Oks/LoginAction";//请求服务器端的URL
	private static URL url;
	//实例化URL
	static{
		try {
			url = new URL(PATH);
		} catch (MalformedURLException e) {
			e.printStackTrace();
		}
	}
	/**
	 * 
	 * @param params 传递参数,
	 * @param encode 字节编码
	 * @return
	 */
	public static String sendPostMessage(Map<String,String> params,String encode){
		StringBuffer buffer = new StringBuffer();//请求体放入，转换成字节
		try {
			if( params!=null && !params.isEmpty()){
				for(Map.Entry<String, String>entry:params.entrySet()){
						buffer.append(entry.getKey())
							  .append("=")
							  .append(URLEncoder.encode(entry.getValue(),encode))
							  .append("&");
				}
				buffer.deleteCharAt(buffer.length()-1);//删除最后一个符号&
			}
			HttpURLConnection con = (HttpURLConnection) url.openConnection();
			con.setReadTimeout(5000);
			con.setDoOutput(true);//向服务器写数据
			con.setDoInput(true);//从服务器读数据
			con.setRequestMethod("POST");
			//获得上传信息的字节大小以及长度
			byte[] mydata = buffer.toString().getBytes();
			//表示设置请求体的类型是文本类型,符合Html协议
			con.setRequestProperty("Content-Type", "application/x-www-form-urlencoded");
			con.setRequestProperty("Content-Length", String.valueOf(mydata.length));
			//获得输出流，向服务器写数据
			OutputStream out = con.getOutputStream();
			out.write(mydata);
			out.flush();
			//从服务器端获得响应结果
			int responseCode = con.getResponseCode();
			if(responseCode==200){
				InputStream in = con.getInputStream();
				String content = getStringFromStream(in,encode);
				return content;
			}
		} catch (UnsupportedEncodingException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		return "";
	}
	
	//将输入流转换成字符串,制定编码格式
	private static String getStringFromStream(InputStream in,String encode) throws IOException {
		ByteArrayOutputStream bos = new ByteArrayOutputStream();
		byte[] buf = new byte[1024];
		int len;
		while((len=in.read(buf))!=-1){
			bos.write(buf,0,len);
		}
		in.close();
		String result = new String(bos.toByteArray(),encode);
		return result;
	}
	
}
